<UserControl
    x:Class="BikeTouringGIS.LayerList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:esri="http://schemas.esri.com/arcgis/runtime/2013"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:BikeTouringGIS"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:vm="clr-namespace:BikeTouringGIS.ViewModels"
    x:Name="layerlist"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <vm:LayerListViewModel />
    </UserControl.DataContext>
    <ListView
        x:Name="layerlistview"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        BorderThickness="0"
        ItemsSource="{Binding Layers}"
        SelectedItem="{Binding SelectedLayer, Mode=TwoWay}">
        <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border
                                x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen" Opacity="0.25" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="DarkGreen" />
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
            <DataTemplate>
                <StackPanel Margin="2" Visibility="{Binding ShowLegend, Mode=TwoWay, Converter={StaticResource booleanVisibilityConverter}}">
                    <iconPacks:PackIconMaterial
                        Width="16"
                        Height="16"
                        Foreground="DarkGreen"
                        Kind="CommentOutline"
                        Visibility="{Binding IsInEditMode, Converter={StaticResource booleanVisibilityConverter}}" />
                    <TextBlock Margin="0,4" Text="{Binding DisplayName}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel>
                            <Slider
                                Margin="0,0,20,0"
                                Maximum="1"
                                Minimum="0"
                                TickFrequency="0.01"
                                Visibility="{Binding SplitLayer.ShowLegend, Converter={StaticResource inverseBooleanVisibilityConverter}}"
                                Value="{Binding Opacity, Mode=TwoWay}" />
                            <Slider
                                Margin="0,0,20,0"
                                Maximum="1"
                                Minimum="0"
                                TickFrequency="0.01"
                                Visibility="{Binding SplitLayer.ShowLegend, Converter={StaticResource booleanVisibilityConverter}}"
                                Value="{Binding SplitLayer.Opacity, Mode=TwoWay}" />
                            <Button Command="{Binding Map.RemoveLayerCommand, ElementName=layerlist}" CommandParameter="{Binding}">
                                <Button.Content>
                                    <iconPacks:PackIconMaterial
                                        Width="32"
                                        Height="32"
                                        Foreground="DarkGreen"
                                        Kind="Delete" />
                                </Button.Content>
                            </Button>
                            <Button
                                Command="{Binding Menu.Base.SaveLayerCommand, ElementName=layerlist}"
                                CommandParameter="{Binding}"
                                IsEnabled="{Binding IsInEditMode}">
                                <Button.Content>
                                    <iconPacks:PackIconMaterial
                                        Width="32"
                                        Height="32"
                                        Foreground="DarkGreen"
                                        Kind="FileOutline" />
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding Menu.Base.CenterToLayer, ElementName=layerlist}" CommandParameter="{Binding}">
                                <Button.Content>
                                    <iconPacks:PackIconMaterial
                                        Width="32"
                                        Height="32"
                                        Foreground="DarkGreen"
                                        Kind="FlashRedEye" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</UserControl>