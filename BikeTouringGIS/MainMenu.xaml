<UserControl
    x:Class="BikeTouringGIS.MainMenu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:BikeTouringGIS.Converters"
    xmlns:converters2="clr-namespace:Kent.Boogaart.Converters;assembly=Kent.Boogaart.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    x:Name="menu"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:StringToIntConverter x:Key="stringToIntConverter" />
        <converters:NotNullAndPrefixConverter x:Key="notNullAndPrefixConverter" />
        <converters:SplitIsEnabledConverter x:Key="splitIsEnabledConverter" />
        <converters:LayerIsGpxRouteConverter x:Key="layerIsRouteConverter"/>
        <converters:LayerIsGpxTrackConverter x:Key="layerIsTrackConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Image
            Grid.Column="0"
            Width="150"
            Height="99"
            Margin="5,0,5,0"
            VerticalAlignment="Bottom"
            Source="bike touring gis splash screen.png"
            Stretch="Fill" />
        <Fluent:Ribbon
            x:Name="ribbonMenu"
            Grid.Column="1"
            AutomaticStateManagement="True"
            Background="White"
            CanCustomizeQuickAccessToolBarItems="False"
            CanMinimize="False"
            CanQuickAccessLocationChanging="False"
            IsAutomaticCollapseEnabled="False"
            IsQuickAccessToolBarVisible="False"
            ShowQuickAccessToolBarAboveRibbon="False">
            <!--
            <Fluent:Ribbon.Menu>

                <Fluent:ApplicationMenu Header="File">
                    <Fluent:ApplicationMenu.RightPaneContent>
                        <StackPanel
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Orientation="Vertical">
                            <Border
                                HorizontalAlignment="Stretch"
                                BorderBrush="#64647F"
                                BorderThickness="0,0,0,0">
                                <TextBlock
                                    Padding="12,4,4,4"
                                    Background="#F6F7F8"
                                    FontSize="12"
                                    FontWeight="SemiBold"
                                    Foreground="#64647F"
                                    Text="Recent files"
                                    TextAlignment="Left" />
                            </Border>
                            <StackPanel Height="2" HorizontalAlignment="Stretch">
                                <Border
                                    Height="1"
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="#DCDDDE"
                                    BorderThickness="1" />
                                <Border
                                    Height="1"
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="#FEFEFF"
                                    BorderThickness="1" />
                            </StackPanel>
                        </StackPanel>
                    </Fluent:ApplicationMenu.RightPaneContent>
                    <Fluent:MenuItem Header="New" />
                    <Fluent:MenuItem Header="Open" />
                    <Fluent:MenuItem Header="Save As" />
                    <Separator />
                    <Fluent:MenuItem
                        Command="{Binding ExitCommand}"
                        Header="Exit"
                        KeyTip="X" />
                </Fluent:ApplicationMenu>
            </Fluent:Ribbon.Menu>
            -->
            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup
                    x:Name="poitab"
                    BorderBrush="Pink"
                    Foreground="LimeGreen"
                    Header="Points of Interest"
                    Visibility="Visible" />
                <Fluent:RibbonContextualTabGroup
                    x:Name="layertab"
                    BorderBrush="White"
                    Foreground="LimeGreen"
                    Header="Layer"
                    IsEnabled="{Binding SelectedLayer, Converter={StaticResource notNullConverter}}"
                    Visibility="Visible" />
            </Fluent:Ribbon.ContextualGroups>
            <Fluent:RibbonTabItem
                MinWidth="150"
                Header="General"
                IsSelected="{Binding SelectedLayer, Converter={StaticResource nullConverter}}">
                <Fluent:RibbonGroupBox Header="data">
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base.OpenGPXFileCommand}"
                        CommandParameter="{Binding Map}"
                        Header="open gpx-file"
                        SizeDefinition="10"
                        ToolTip="open gpx-file and add it to the map">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FileImport" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="navigation">
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base.CenterCommand}"
                        Header="zoom to overview"
                        SizeDefinition="10"
                        ToolTip="center map to all data in the map">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="Eye" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base.ZoomInCommand}"
                        Header="zoom in"
                        SizeDefinition="10"
                        ToolTip="zoom in the current view of the map">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="Plus" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base.ZoomOutCommand}"
                        Header="zoom out"
                        SizeDefinition="10"
                        ToolTip="zoom out the current view of the map">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="Minus" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <!--
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base}"
                        CommandParameter="{Binding Map}"
                        Header="pan"
                        SizeDefinition="10">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconFontAwesome
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="HandPaperOutline" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    -->
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <!--
            <Fluent:RibbonTabItem
                MinWidth="150"
                Group="{Binding ElementName=poitab}"
                Header="General">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base}"
                        CommandParameter="{Binding Map}"
                        Header="add PoI"
                        SizeDefinition="10">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FileImport" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base}"
                        CommandParameter="{Binding Map}"
                        Header="delete PoI"
                        SizeDefinition="10">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FileImport" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            -->
            <Fluent:RibbonTabItem MinWidth="150" Header="Settings">
                <Fluent:RibbonGroupBox>
                    <Fluent:TextBox
                        Header="default split length (km)"
                        InputWidth="40"
                        MaxLength="3"
                        Text="{Binding Base.SplitLength, Mode=TwoWay, Converter={StaticResource stringToIntConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    <Fluent:CheckBox Header="convert tracks automatically in routes" IsChecked="{Binding Base.ConvertTracksToRoutesAutomatically, Mode=TwoWay}" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem
                Group="{Binding ElementName=layertab, Mode=OneWay}"
                Header="Layer"
                IsEnabled="{Binding SelectedLayer, Converter={StaticResource notNullConverter}}"
                IsSelected="{Binding SelectedLayer, Converter={StaticResource notNullConverter}}"
                Visibility="Visible">
                <Fluent:RibbonGroupBox MinWidth="250" Header="properties">
                    <Fluent:TwoLineLabel MinWidth="240" Text="{Binding SelectedLayer.DisplayName}" />
                    <Fluent:TextBox MinWidth="240" Text="{Binding SelectedLayer.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="file">
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Map.SaveLayerCommand}"
                        CommandParameter="{Binding SelectedLayer}"
                        Header="save layer"
                        IsEnabled="{Binding SelectedLayer.IsInEditMode}"
                        SizeDefinition="10"
                        ToolTip="save layer to same file">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FileSend" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Map.SaveLayerAsCommand}"
                        CommandParameter="{Binding SelectedLayer}"
                        Header="save layer as..."
                        SizeDefinition="10"
                        ToolTip="save layer to new file">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FileExport" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="tools">
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Base.CenterToLayerCommand}"
                        CommandParameter="{Binding SelectedLayer}"
                        Header="zoom to layer"
                        SizeDefinition="10"
                        ToolTip="center map to layer">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="FlashRedEye" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        MinWidth="100"
                        CanAddToQuickAccessToolBar="False"
                        Command="{Binding Map.RemoveLayerCommand}"
                        CommandParameter="{Binding SelectedLayer}"
                        Header="remove layer"
                        SizeDefinition="10"
                        ToolTip="remove layer from map">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="Delete" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem
                Group="{Binding ElementName=layertab, Mode=OneWay}"
                Header="Editing"
                Visibility="{Binding SelectedLayer, Converter={StaticResource layerIsRouteConverter}}"
                IsEnabled="{Binding SelectedLayer, Converter={StaticResource layerIsRouteConverter}, ConverterParameter='boolean'}">
                <Fluent:RibbonGroupBox Header="flipping">
                    <Fluent:Button
                        MinWidth="100"
                        Command="{Binding Base.FlipDirectionCommand}"
                        CommandParameter="{Binding DataContext.SelectedLayer}"
                        Header="flip direction"
                        IsEnabled="{Binding SelectedLayer, Converter={StaticResource notNullConverter}}"
                        ToolTip="flip the direction of the route and so the drive direction">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="Rotate3d" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem
                MinWidth="150"
                Group="{Binding ElementName=layertab, Mode=OneWay}"
                Header="Splitting"
                Visibility="{Binding SelectedLayer, Converter={StaticResource layerIsRouteConverter}}"
                IsEnabled="{Binding SelectedLayer, Converter={StaticResource layerIsRouteConverter}, ConverterParameter='boolean'}">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        MinWidth="100"
                        Command="{Binding Base.SplitRouteCommand}"
                        Header="split route"
                        ToolTip="split the route in parts of the same length">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="ContentCut" />
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource lengthAndLayerConverter}">
                                <Binding ElementName="menu" Path="DataContext.SelectedLayer" />
                                <Binding ElementName="splitLengthSlider" Path="Value" />
                            </MultiBinding>
                        </Fluent:Button.CommandParameter>
                        <Fluent:Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource splitIsEnabledConverter}">
                                <Binding Path="SelectedLayer.IsSplitted" />
                                <Binding Path="Base.SplitLength" />
                                <Binding Path="SelectedLayer.TotalLength" />
                            </MultiBinding>
                        </Fluent:Button.IsEnabled>
                    </Fluent:Button>
                    <StackPanel Margin="0,5,0,0">
                        <Slider
                            x:Name="splitLengthSlider"
                            Width="200"
                            Height="50"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding SelectedLayer.TotalLength, Converter={StaticResource lengthToMaximumSplitLengthConverter}}"
                            Minimum="10"
                            TickFrequency="1"
                            Ticks="10, 20, 30, 40, 50, 60, 70, 80, 90, 100,110,120,130,140,150"
                            ToolTip="select the length of a splitted route part"
                            Value="{Binding Base.SplitLength}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <mvvm:EventToCommand
                                        Command="{Binding Base.ChangeSplitRouteCommand}"
                                        EventArgsConverter="{StaticResource lengthConverter}"
                                        EventArgsConverterParameter="{Binding DataContext.SelectedLayer, ElementName=menu}"
                                        PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Value, ElementName=splitLengthSlider, StringFormat={}{0} km}" />
                    </StackPanel>
                    <Fluent:Button
                        MinWidth="100"
                        Command="{Binding Base.RemoveSplitRouteCommand}"
                        CommandParameter="{Binding DataContext.SelectedLayer}"
                        Header="remove split route"
                        IsEnabled="{Binding SelectedLayer.IsSplitted}"
                        ToolTip="remove the splitted route and show the original route again">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="CloseCircle" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:TextBox
                        Margin="0,25,0,0"
                        Header="prefix"
                        InputWidth="150"
                        IsEnabled="{Binding SelectedLayer.IsSplitted}"
                        Text="{Binding SelectedLayer.SplitPrefix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="determine the prefix of the files with the splitted parts of the route" />
                    <Fluent:Button
                        MinWidth="100"
                        Command="{Binding Base.SaveSplitRouteCommand}"
                        CommandParameter="{Binding DataContext.SelectedLayer}"
                        Header="save split route"
                        ToolTip="save the splitted parts of the route to new files">
                        <Fluent:Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource notNullAndPrefixConverter}">
                                <Binding Path="SelectedLayer.IsSplitted" />
                                <Binding Path="SelectedLayer.SplitPrefix" />
                            </MultiBinding>
                        </Fluent:Button.IsEnabled>
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconMaterial
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="ContentSave" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem
                Group="{Binding ElementName=layertab, Mode=OneWay}"
                Header="Timing"
                Visibility="{Binding SelectedLayer, Converter={StaticResource layerIsTrackConverter}}"
                IsEnabled="{Binding SelectedLayer, Converter={StaticResource layerIsTrackConverter}, ConverterParameter='boolean'}">
                <Fluent:RibbonGroupBox Header="end time">
                    <Fluent:Button
                        MinWidth="100"
                        Command="{Binding Base.ResetEndTimeCommand}"
                        CommandParameter="{Binding DataContext.SelectedLayer}"
                        Header="recalculate"
                        IsEnabled="{Binding SelectedLayer, Converter={StaticResource notNullConverter}}"
                        ToolTip="recalculate end time and time of points on the track">
                        <Fluent:Button.LargeIcon>
                            <iconPacks:PackIconModern
                                Width="32"
                                Height="32"
                                Foreground="DarkGreen"
                                Kind="TimerRewind" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
    </Grid>
</UserControl>